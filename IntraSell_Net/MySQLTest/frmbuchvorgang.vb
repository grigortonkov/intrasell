' ++++++++++++++++++++++++++++++++++++++++++++++++++
' This code is generated by a tool and is provided "as is", without warranty of any kind,
' express or implied, including but not limited to the warranties of merchantability,
' fitness for a particular purpose and non-infringement.
' In no event shall the authors or copyright holders be liable for any claim, damages or
' other liability, whether in an action of contract, tort or otherwise, arising from,
' out of or in connection with the software or the use or other dealings in the software.
' ++++++++++++++++++++++++++++++++++++++++++++++++++
' 

Imports System.ComponentModel
Imports MySql.Data.MySqlClient

Namespace MySQLTest
	
	Public Class frmbuchvorgang
		
		Private ad As MySqlDataAdapter
		
		Private Sub frmbuchvorgang_Load(sender As System.Object, e As System.EventArgs) Handles MyBase.Load
			Dim strConn As String = "server=localhost;user id=root;password=a1060;persistsecurityinfo=True;database=intrasell_daten_2;"
			ad = New MySqlDataAdapter("select * from `buchvorgang`", strConn)
			Dim builder As MySqlCommandBuilder = New MySqlCommandBuilder(ad)
			ad.Fill(Me.newDataSet.buchvorgang)
			ad.DeleteCommand = builder.GetDeleteCommand()
			ad.UpdateCommand = builder.GetUpdateCommand()
			ad.InsertCommand = builder.GetInsertCommand()
			Dim ad3 As MySqlDataAdapter
			ad3 = New MySqlDataAdapter("select * from `buchvorgangtyp`", strConn)
			ad3.Fill(Me.newDataSet.buchvorgangtyp)
			Me.Typ_comboBox.DataSource = Me.newDataSet.buchvorgangtyp
			Me.Typ_comboBox.DisplayMember = "Typ"
			Me.Typ_comboBox.ValueMember = "Typ"
			Me.Typ_comboBox.DataBindings.Add(New System.Windows.Forms.Binding("SelectedValue", Me.buchvorgangBindingSource, "Typ", True))
			ad3.Dispose()
			ad3 = New MySqlDataAdapter("select * from `ofadressen`", strConn)
			ad3.Fill(Me.newDataSet.ofadressen)
			Me.KundNr_comboBox.DataSource = Me.newDataSet.ofadressen
			Me.KundNr_comboBox.DisplayMember = "IDNR"
			Me.KundNr_comboBox.ValueMember = "IDNR"
			Me.KundNr_comboBox.DataBindings.Add(New System.Windows.Forms.Binding("SelectedValue", Me.buchvorgangBindingSource, "KundNr", True))
			ad3.Dispose()
			ad3 = New MySqlDataAdapter("select * from `ofadressen-weitere`", strConn)
			ad3.Fill(Me.newDataSet.ofadressen_weitere)
			Me.KundNr1_comboBox.DataSource = Me.newDataSet.ofadressen_weitere
			Me.KundNr1_comboBox.DisplayMember = "ID"
			Me.KundNr1_comboBox.ValueMember = "ID"
			Me.KundNr1_comboBox.DataBindings.Add(New System.Windows.Forms.Binding("SelectedValue", Me.buchvorgangBindingSource, "KundNr1", True))
			ad3.Dispose()
		End Sub
		
		Private Sub ToolStripButton1_Click(sender As System.Object, e As System.EventArgs) Handles ToolStripButton1.Click
			If Not Me.Validate() Then
				Return
			End If
			If TypeOf( CType(buchvorgangBindingSource.Current, DataRowView )( "Datum" ) ) Is DBNull Then 
				CType(buchvorgangBindingSource.Current, DataRowView )("Datum") = Datum_dateTimePicker.Value
			End If
			If TypeOf( CType(buchvorgangBindingSource.Current, DataRowView )( "Bezahlt" ) ) Is DBNull Then 
				CType(buchvorgangBindingSource.Current, DataRowView )("Bezahlt") = BezahltCheckBox.Checked
			End If
			If TypeOf( CType(buchvorgangBindingSource.Current, DataRowView )( "Ausgedruckt" ) ) Is DBNull Then 
				CType(buchvorgangBindingSource.Current, DataRowView )("Ausgedruckt") = AusgedrucktCheckBox.Checked
			End If
			If TypeOf( CType(buchvorgangBindingSource.Current, DataRowView )( "Abgeschlossen" ) ) Is DBNull Then 
				CType(buchvorgangBindingSource.Current, DataRowView )("Abgeschlossen") = AbgeschlossenCheckBox.Checked
			End If
			If TypeOf( CType(buchvorgangBindingSource.Current, DataRowView )( "ErstelltAm" ) ) Is DBNull Then 
				CType(buchvorgangBindingSource.Current, DataRowView )("ErstelltAm") = DateTime.Now
			End If
			buchvorgangBindingSource.EndEdit()
			ad.Update(Me.newDataSet.buchvorgang)
		End Sub
		
		Private Sub frmbuchvorgang_FormClosing(sender As System.Object, e As System.Windows.Forms.FormClosingEventArgs) Handles MyBase.FormClosing
			e.Cancel = False
		End Sub
		
		Private Sub NummerTextBox_Validating(sender As Object, e As CancelEventArgs)
			
			e.Cancel = False
			If String.IsNullOrEmpty( NummerTextBox.Text ) Then 
				e.Cancel = True
				errorProvider1.SetError( NummerTextBox, "The field Nummer is required" ) 
			End If
			Dim v As Integer
			Dim s As string = NummerTextBox.Text
			If Not Integer.TryParse( s, v ) Then
				e.Cancel = True
				errorProvider1.SetError( NummerTextBox, "The field Nummer must be Integer." )
			End If
			If Not e.Cancel Then
				errorProvider1.SetError( NummerTextBox, "" )
			End If
		End Sub
		
		Private Sub Typ_comboBox_Validating(sender As System.Object, e As System.ComponentModel.CancelEventArgs)
			Dim i As Integer = Typ_comboBox.SelectedIndex
			e.Cancel = False
			If i = -1 Then
				e.Cancel = True
				errorProvider1.SetError(Typ_comboBox, "Must select a Typ")
			End If
			If Not e.Cancel Then
				errorProvider1.SetError(Typ_comboBox, "")
			End If
		End Sub
		Private Sub KundNr_comboBox_Validating(sender As System.Object, e As System.ComponentModel.CancelEventArgs)
			Dim i As Integer = KundNr_comboBox.SelectedIndex
			e.Cancel = False
			If i = -1 Then
				e.Cancel = True
				errorProvider1.SetError(KundNr_comboBox, "Must select a KundNr")
			End If
			If Not e.Cancel Then
				errorProvider1.SetError(KundNr_comboBox, "")
			End If
		End Sub
		Private Sub NotizTextBox_Validating(sender As Object, e As CancelEventArgs)
			
			e.Cancel = False
			If String.IsNullOrEmpty( NotizTextBox.Text ) Then 
				e.Cancel = True
				errorProvider1.SetError( NotizTextBox, "The field Notiz is required" ) 
			End If
			If Not e.Cancel Then
				errorProvider1.SetError( NotizTextBox, "" )
			End If
		End Sub
		
		Private Sub NotizInternTextBox_Validating(sender As Object, e As CancelEventArgs)
			
			e.Cancel = False
			If String.IsNullOrEmpty( NotizInternTextBox.Text ) Then 
				e.Cancel = True
				errorProvider1.SetError( NotizInternTextBox, "The field NotizIntern is required" ) 
			End If
			If Not e.Cancel Then
				errorProvider1.SetError( NotizInternTextBox, "" )
			End If
		End Sub
		
		Private Sub NotizExternTextBox_Validating(sender As Object, e As CancelEventArgs)
			
			e.Cancel = False
			If String.IsNullOrEmpty( NotizExternTextBox.Text ) Then 
				e.Cancel = True
				errorProvider1.SetError( NotizExternTextBox, "The field NotizExtern is required" ) 
			End If
			If Not e.Cancel Then
				errorProvider1.SetError( NotizExternTextBox, "" )
			End If
		End Sub
		
		Private Sub SummeTextBox_Validating(sender As Object, e As CancelEventArgs)
			
			e.Cancel = False
			If String.IsNullOrEmpty( SummeTextBox.Text ) Then 
				e.Cancel = True
				errorProvider1.SetError( SummeTextBox, "The field Summe is required" ) 
			End If
			Dim v As Double
			Dim s As string = SummeTextBox.Text
			If Not Double.TryParse( s, v ) Then
				e.Cancel = True
				errorProvider1.SetError( SummeTextBox, "The field Summe must be Double." )
			End If
			If Not e.Cancel Then
				errorProvider1.SetError( SummeTextBox, "" )
			End If
		End Sub
		
		Private Sub ZahlungsbedingungTextBox_Validating(sender As Object, e As CancelEventArgs)
			
			e.Cancel = False
			If String.IsNullOrEmpty( ZahlungsbedingungTextBox.Text ) Then 
				e.Cancel = True
				errorProvider1.SetError( ZahlungsbedingungTextBox, "The field Zahlungsbedingung is required" ) 
			End If
			If Not e.Cancel Then
				errorProvider1.SetError( ZahlungsbedingungTextBox, "" )
			End If
		End Sub
		
		Private Sub TransportMethodeTextBox_Validating(sender As Object, e As CancelEventArgs)
			
			e.Cancel = False
			If String.IsNullOrEmpty( TransportMethodeTextBox.Text ) Then 
				e.Cancel = True
				errorProvider1.SetError( TransportMethodeTextBox, "The field TransportMethode is required" ) 
			End If
			If Not e.Cancel Then
				errorProvider1.SetError( TransportMethodeTextBox, "" )
			End If
		End Sub
		
		Private Sub ZahlungsMethodeTextBox_Validating(sender As Object, e As CancelEventArgs)
			
			e.Cancel = False
			If String.IsNullOrEmpty( ZahlungsMethodeTextBox.Text ) Then 
				e.Cancel = True
				errorProvider1.SetError( ZahlungsMethodeTextBox, "The field ZahlungsMethode is required" ) 
			End If
			If Not e.Cancel Then
				errorProvider1.SetError( ZahlungsMethodeTextBox, "" )
			End If
		End Sub
		
		Private Sub WoherTextBox_Validating(sender As Object, e As CancelEventArgs)
			
			e.Cancel = False
			If String.IsNullOrEmpty( WoherTextBox.Text ) Then 
				e.Cancel = True
				errorProvider1.SetError( WoherTextBox, "The field Woher is required" ) 
			End If
			If Not e.Cancel Then
				errorProvider1.SetError( WoherTextBox, "" )
			End If
		End Sub
		
		Private Sub WohinTextBox_Validating(sender As Object, e As CancelEventArgs)
			
			e.Cancel = False
			If String.IsNullOrEmpty( WohinTextBox.Text ) Then 
				e.Cancel = True
				errorProvider1.SetError( WohinTextBox, "The field Wohin is required" ) 
			End If
			If Not e.Cancel Then
				errorProvider1.SetError( WohinTextBox, "" )
			End If
		End Sub
		
		Private Sub StatusTextBox_Validating(sender As Object, e As CancelEventArgs)
			
			e.Cancel = False
			If String.IsNullOrEmpty( StatusTextBox.Text ) Then 
				e.Cancel = True
				errorProvider1.SetError( StatusTextBox, "The field Status is required" ) 
			End If
			If Not e.Cancel Then
				errorProvider1.SetError( StatusTextBox, "" )
			End If
		End Sub
		
		Private Sub SummeMWSTTextBox_Validating(sender As Object, e As CancelEventArgs)
			
			e.Cancel = False
			If String.IsNullOrEmpty( SummeMWSTTextBox.Text ) Then 
				e.Cancel = True
				errorProvider1.SetError( SummeMWSTTextBox, "The field SummeMWST is required" ) 
			End If
			Dim v As Double
			Dim s As string = SummeMWSTTextBox.Text
			If Not Double.TryParse( s, v ) Then
				e.Cancel = True
				errorProvider1.SetError( SummeMWSTTextBox, "The field SummeMWST must be Double." )
			End If
			If Not e.Cancel Then
				errorProvider1.SetError( SummeMWSTTextBox, "" )
			End If
		End Sub
		
		Private Sub SummeBruttoTextBox_Validating(sender As Object, e As CancelEventArgs)
			
			e.Cancel = False
			If String.IsNullOrEmpty( SummeBruttoTextBox.Text ) Then 
				e.Cancel = True
				errorProvider1.SetError( SummeBruttoTextBox, "The field SummeBrutto is required" ) 
			End If
			Dim v As Double
			Dim s As string = SummeBruttoTextBox.Text
			If Not Double.TryParse( s, v ) Then
				e.Cancel = True
				errorProvider1.SetError( SummeBruttoTextBox, "The field SummeBrutto must be Double." )
			End If
			If Not e.Cancel Then
				errorProvider1.SetError( SummeBruttoTextBox, "" )
			End If
		End Sub
		
		Private Sub LieferantNrTextBox_Validating(sender As Object, e As CancelEventArgs)
			
			e.Cancel = False
			If String.IsNullOrEmpty( LieferantNrTextBox.Text ) Then 
				e.Cancel = True
				errorProvider1.SetError( LieferantNrTextBox, "The field LieferantNr is required" ) 
			End If
			Dim v As Integer
			Dim s As string = LieferantNrTextBox.Text
			If Not Integer.TryParse( s, v ) Then
				e.Cancel = True
				errorProvider1.SetError( LieferantNrTextBox, "The field LieferantNr must be Integer." )
			End If
			If Not e.Cancel Then
				errorProvider1.SetError( LieferantNrTextBox, "" )
			End If
		End Sub
		
		Private Sub MitarbeiterNrTextBox_Validating(sender As Object, e As CancelEventArgs)
			
			e.Cancel = False
			If String.IsNullOrEmpty( MitarbeiterNrTextBox.Text ) Then 
				e.Cancel = True
				errorProvider1.SetError( MitarbeiterNrTextBox, "The field MitarbeiterNr is required" ) 
			End If
			Dim v As Integer
			Dim s As string = MitarbeiterNrTextBox.Text
			If Not Integer.TryParse( s, v ) Then
				e.Cancel = True
				errorProvider1.SetError( MitarbeiterNrTextBox, "The field MitarbeiterNr must be Integer." )
			End If
			If Not e.Cancel Then
				errorProvider1.SetError( MitarbeiterNrTextBox, "" )
			End If
		End Sub
		
		Private Sub KundNr1_comboBox_Validating(sender As System.Object, e As System.ComponentModel.CancelEventArgs)
			Dim i As Integer = KundNr1_comboBox.SelectedIndex
			e.Cancel = False
			If i = -1 Then
				e.Cancel = True
				errorProvider1.SetError(KundNr1_comboBox, "Must select a KundNr1")
			End If
			If Not e.Cancel Then
				errorProvider1.SetError(KundNr1_comboBox, "")
			End If
		End Sub
		Private Sub KundNr2TextBox_Validating(sender As Object, e As CancelEventArgs)
			
			e.Cancel = False
			If String.IsNullOrEmpty( KundNr2TextBox.Text ) Then 
				e.Cancel = True
				errorProvider1.SetError( KundNr2TextBox, "The field KundNr2 is required" ) 
			End If
			Dim v As Integer
			Dim s As string = KundNr2TextBox.Text
			If Not Integer.TryParse( s, v ) Then
				e.Cancel = True
				errorProvider1.SetError( KundNr2TextBox, "The field KundNr2 must be Integer." )
			End If
			If Not e.Cancel Then
				errorProvider1.SetError( KundNr2TextBox, "" )
			End If
		End Sub
		
		Private Sub WaehrungTextBox_Validating(sender As Object, e As CancelEventArgs)
			
			e.Cancel = False
			If String.IsNullOrEmpty( WaehrungTextBox.Text ) Then 
				e.Cancel = True
				errorProvider1.SetError( WaehrungTextBox, "The field Waehrung is required" ) 
			End If
			If Not e.Cancel Then
				errorProvider1.SetError( WaehrungTextBox, "" )
			End If
		End Sub
		
		
		Private Sub bindingNavigatorAddNewItem_Click(sender As System.Object, e As System.EventArgs)
			buchvorgangBindingSource.AddNew()
		End Sub
		
	End Class
	
End Namespace
