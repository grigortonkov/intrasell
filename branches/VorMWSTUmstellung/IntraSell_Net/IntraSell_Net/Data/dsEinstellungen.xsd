<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="dsEinstellungen" targetNamespace="http://tempuri.org/dsEinstellungen.xsd" xmlns:mstns="http://tempuri.org/dsEinstellungen.xsd" xmlns="http://tempuri.org/dsEinstellungen.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="intrasell_daten_2_ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="intrasell_daten_2_ConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.IntraSell_Net.My.MySettings.GlobalReference.Default.intrasell_daten_2_ConnectionString" Provider="MySql.Data.MySqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ofvarsTableAdapter" GeneratorDataComponentClassName="ofvarsTableAdapter" Name="ofvars" UserDataComponentName="ofvarsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="intrasell_daten_2_ConnectionString (MySettings)" DbObjectName="intrasell_daten_2.ofvars" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `ofvars` WHERE ((`Id` = @Original_Id) AND (`Name` = @Original_Name) AND ((@IsNull_Wert = 1 AND `Wert` IS NULL) OR (`Wert` = @Original_Wert)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Wert" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="Wert" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Wert" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Wert" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `ofvars` (`Id`, `Name`, `Wert`) VALUES (@Id, @Name, @Wert)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Wert" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Wert" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT `Id`, `Name`, `Wert` FROM `ofvars`</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       ofvars
SET                Name = @Name, Wert = @Wert
WHERE        (Id = @Original_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Name" ColumnName="Name" DataSourceName="intrasell_daten_2.ofvars" DataTypeServer="varchar(50)(50)" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Wert" ColumnName="Wert" DataSourceName="intrasell_daten_2.ofvars" DataTypeServer="varchar(255)(255)" DbType="String" Direction="Input" ParameterName="@Wert" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="Wert" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_Id" ColumnName="Id" DataSourceName="intrasell_daten_2.ofvars" DataTypeServer="int(10)" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Wert" DataSetColumn="Wert" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="dsEinstellungen" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="dsEinstellungen" msprop:Generator_UserDSName="dsEinstellungen">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ofvars" msprop:Generator_TableClassName="ofvarsDataTable" msprop:Generator_TableVarName="tableofvars" msprop:Generator_TablePropName="ofvars" msprop:Generator_RowDeletingName="ofvarsRowDeleting" msprop:Generator_UserTableName="ofvars" msprop:Generator_RowChangingName="ofvarsRowChanging" msprop:Generator_RowEvHandlerName="ofvarsRowChangeEventHandler" msprop:Generator_RowDeletedName="ofvarsRowDeleted" msprop:Generator_RowEvArgName="ofvarsRowChangeEvent" msprop:Generator_RowChangedName="ofvarsRowChanged" msprop:Generator_RowClassName="ofvarsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Wert" msprop:Generator_ColumnVarNameInTable="columnWert" msprop:Generator_ColumnPropNameInRow="Wert" msprop:Generator_ColumnPropNameInTable="WertColumn" msprop:Generator_UserColumnName="Wert" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IsBooleanValue" msdata:ReadOnly="true" msdata:Expression="Wert='True' or Wert = ' False'" msprop:Generator_ColumnVarNameInTable="columnIsBooleanValue" msprop:Generator_ColumnPropNameInRow="IsBooleanValue" msprop:Generator_ColumnPropNameInTable="IsBooleanValueColumn" msprop:Generator_UserColumnName="IsBooleanValue" type="xs:boolean" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ofvars" />
      <xs:field xpath="mstns:Name" />
    </xs:unique>
  </xs:element>
</xs:schema>